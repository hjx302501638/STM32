<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [..\OBJ\STMFLASH.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image ..\OBJ\STMFLASH.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060183: Last Updated: Wed Jan 23 17:42:30 2019
<BR><P>
<H3>Maximum Stack Usage =        348 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; menu &rArr; CurrentDisplay &rArr; GetWater &rArr; GetUP_Quantify &rArr; Save_UP_GETWarte &rArr; Writer_GetWater_Data &rArr; Test_Write &rArr; STMFLASH_Write &rArr; STMFLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[16b]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[20]">ADC1_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[20]">ADC1_2_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[20]">ADC1_2_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3d]">ADC3_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[f3]">A_CX_Step2</a> from app.o(.text) referenced from app.o(.text)
 <LI><a href="#[f2]">A_CX_Step3</a> from app.o(.text) referenced from app.o(.text)
 <LI><a href="#[f7]">B_CX_Step2</a> from app.o(.text) referenced from app.o(.text)
 <LI><a href="#[8]">BusFault_Handler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[23]">CAN1_RX1_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[24]">CAN1_SCE_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[19]">DMA1_Channel1_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[1a]">DMA1_Channel2_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[1b]">DMA1_Channel3_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[1c]">DMA1_Channel4_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[1d]">DMA1_Channel5_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[1e]">DMA1_Channel6_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[1f]">DMA1_Channel7_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[46]">DMA2_Channel1_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[47]">DMA2_Channel2_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[48]">DMA2_Channel3_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[49]">DMA2_Channel4_5_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[b]">DebugMon_Handler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[14]">EXTI0_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[36]">EXTI15_10_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[15]">EXTI1_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[16]">EXTI2_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[17]">EXTI3_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[18]">EXTI4_IRQHandler</a> from keyboard.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[25]">EXTI9_5_IRQHandler</a> from keyboard.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[12]">FLASH_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3e]">FSMC_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[4d]">Get_Adc2_Average</a> from my_adc.o(.text) referenced from my_adc.o(.data)
 <LI><a href="#[4e]">Get_Adc3_Average</a> from my_adc.o(.text) referenced from my_adc.o(.data)
 <LI><a href="#[4f]">Get_Adc4_Average</a> from my_adc.o(.text) referenced from my_adc.o(.data)
 <LI><a href="#[4c]">Get_Adc_Average</a> from my_adc.o(.text) referenced from my_adc.o(.data)
 <LI><a href="#[6]">HardFault_Handler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[2e]">I2C1_ER_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[2d]">I2C1_EV_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[30]">I2C2_ER_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[2f]">I2C2_EV_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[7]">MemManage_Handler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[5]">NMI_Handler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[ea]">OFF_EDIF</a> from timer.o(.text) referenced from timer.o(.text)
 <LI><a href="#[e8]">OFF_ROF</a> from timer.o(.text) referenced from timer.o(.text)
 <LI><a href="#[e5]">OFF_UPF</a> from timer.o(.text) referenced from timer.o(.text)
 <LI><a href="#[f]">PVD_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[c]">PendSV_Handler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[13]">RCC_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[37]">RTCAlarm_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[11]">RTC_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[4]">Reset_Handler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3f]">SDIO_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[31]">SPI1_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[32]">SPI2_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[41]">SPI3_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[a]">SVC_Handler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[d]">SysTick_Handler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[4a]">SystemInit</a> from system_stm32f10x.o(.text) referenced from startup_stm32f10x_hd.o(.text)
 <LI><a href="#[10]">TAMPER_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[26]">TIM1_BRK_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[29]">TIM1_CC_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[28]">TIM1_TRG_COM_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[27]">TIM1_UP_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[2a]">TIM2_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[2b]">TIM3_IRQHandler</a> from timer.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[2c]">TIM4_IRQHandler</a> from timer.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[40]">TIM5_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[44]">TIM6_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[45]">TIM7_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[39]">TIM8_BRK_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3c]">TIM8_CC_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3b]">TIM8_TRG_COM_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3a]">TIM8_UP_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[42]">UART4_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[43]">UART5_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[33]">USART1_IRQHandler</a> from usart.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[34]">USART2_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[35]">USART3_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[38]">USBWakeUp_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[21]">USB_HP_CAN1_TX_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[22]">USB_LP_CAN1_RX0_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[9]">UsageFault_Handler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[e]">WWDG_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[50]">__main</a> from __main.o(!!!main) referenced from startup_stm32f10x_hd.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[50]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[51]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[53]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[188]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[189]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[54]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[18a]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[58]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[18b]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[18c]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[18d]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[18e]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[18f]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[190]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[191]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[192]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[193]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[194]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[195]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[196]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[197]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[198]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[199]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[19a]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[19b]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[19c]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[19d]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[19e]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[19f]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[5d]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[1a0]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[1a1]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[1a2]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[1a3]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[1a4]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[1a5]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[1a6]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[52]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[1a7]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[55]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[57]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[1a8]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[59]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 348 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; menu &rArr; CurrentDisplay &rArr; GetWater &rArr; GetUP_Quantify &rArr; Save_UP_GETWarte &rArr; Writer_GetWater_Data &rArr; Test_Write &rArr; STMFLASH_Write &rArr; STMFLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[1a9]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[16c]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[5c]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[1aa]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[5e]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[60]"></a>Init_ALL</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = Init_ALL &rArr; uart_init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_init
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceIO_Init
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_Int_Init
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_DS1302
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_Adc_Init
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitKeyboard
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ini_Lcd
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IO_INIT
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6c]"></a>Open_UP</STRONG> (Thumb, 208 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = Open_UP &rArr; Read_Userdata &rArr; Seve_Userdata &rArr; STMFLASH_Write &rArr; STMFLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_lesure
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceOut
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Userdata
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Admindata
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GET_FLOW
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_PM
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_RefreshAll
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayBuf_Clr
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS1302_Datato10
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clr_Pictrue
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_AD_Device
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BurstRead1302
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5a]"></a>main</STRONG> (Thumb, 128 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 348<LI>Call Chain = main &rArr; menu &rArr; CurrentDisplay &rArr; GetWater &rArr; GetUP_Quantify &rArr; Save_UP_GETWarte &rArr; Writer_GetWater_Data &rArr; Test_Write &rArr; STMFLASH_Write &rArr; STMFLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sotf_Versions_Controller
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS1302_Datato10
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BurstRead1302
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open_UP
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_ALL
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[5]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>HardFault_Handler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SystemReset
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_FAULTMASK
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>MemManage_Handler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SystemReset
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_FAULTMASK
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>BusFault_Handler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SystemReset
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_FAULTMASK
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>UsageFault_Handler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SystemReset
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_FAULTMASK
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>SystemInit</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, system_stm32f10x.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = SystemInit &rArr; SetSysClock &rArr; SetSysClockTo72
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(.text)
</UL>
<P><STRONG><a name="[1ab]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 142 bytes, Stack size 8 bytes, system_stm32f10x.o(.text), UNUSED)

<P><STRONG><a name="[82]"></a>STMFLASH_ReadHalfWord</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stmflash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STMFLASH_Read
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Admindata
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_History_Check
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_HistoryEDI_Add
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_HistoryUP_Add
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_HistoryRO_Add
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Writer_GetWater_Data
</UL>

<P><STRONG><a name="[7f]"></a>STMFLASH_Write_NoCheck</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, stmflash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = STMFLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramHalfWord
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STMFLASH_Write
</UL>

<P><STRONG><a name="[81]"></a>STMFLASH_Read</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, stmflash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = STMFLASH_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STMFLASH_ReadHalfWord
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STMFLASH_Write
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Userdata
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_History_Check
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_UP_GETWarte
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_EDI_GETWarte
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_RO_GETWarte
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Writer_GetWater_Data
</UL>

<P><STRONG><a name="[83]"></a>STMFLASH_Write</STRONG> (Thumb, 222 bytes, Stack size 40 bytes, stmflash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = STMFLASH_Write &rArr; STMFLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Unlock
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Lock
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STMFLASH_Read
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STMFLASH_Write_NoCheck
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_Write
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_UP_GETWarte
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_EDI_GETWarte
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_RO_GETWarte
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seve_Admindata
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clean_GetWater_Data
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Writer_GetWater_Data
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seve_Userdata
</UL>

<P><STRONG><a name="[87]"></a>Test_Write</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, stmflash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = Test_Write &rArr; STMFLASH_Write &rArr; STMFLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STMFLASH_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Admindata
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clean_GetWater_Data
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Writer_GetWater_Data
</UL>

<P><STRONG><a name="[69]"></a>My_Adc_Init</STRONG> (Thumb, 334 bytes, Stack size 72 bytes, my_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = My_Adc_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_ADCCLKConfig
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_DeInit
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_StartCalibration
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_SoftwareStartConvCmd
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ResetCalibration
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_RegularChannelConfig
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetResetCalibrationStatus
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetCalibrationStatus
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DeInit
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMACmd
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Cmd
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_ALL
</UL>

<P><STRONG><a name="[4c]"></a>Get_Adc_Average</STRONG> (Thumb, 128 bytes, Stack size 40 bytes, my_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Get_Adc_Average &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Address Reference Count : 1]<UL><LI> my_adc.o(.data)
</UL>
<P><STRONG><a name="[4d]"></a>Get_Adc2_Average</STRONG> (Thumb, 178 bytes, Stack size 40 bytes, my_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Get_Adc2_Average &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Address Reference Count : 1]<UL><LI> my_adc.o(.data)
</UL>
<P><STRONG><a name="[4e]"></a>Get_Adc3_Average</STRONG> (Thumb, 130 bytes, Stack size 40 bytes, my_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Get_Adc3_Average &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Address Reference Count : 1]<UL><LI> my_adc.o(.data)
</UL>
<P><STRONG><a name="[4f]"></a>Get_Adc4_Average</STRONG> (Thumb, 122 bytes, Stack size 40 bytes, my_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Get_Adc4_Average &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Address Reference Count : 1]<UL><LI> my_adc.o(.data)
</UL>
<P><STRONG><a name="[6d]"></a>Check_AD_Device</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, my_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open_UP
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Change_RO_UP
</UL>

<P><STRONG><a name="[62]"></a>delay_init</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, delay.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = delay_init
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_CLKSourceConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_ALL
</UL>

<P><STRONG><a name="[fc]"></a>delay_us</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, delay.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceOut
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceIO_Init
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ini_Lcd
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clr_Pictrue
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BurstRead1302
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BurstReadRAM
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BurstWriteRAM
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BurstWrite1302
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;R_Data
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W_Data
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OppositeColor
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clr_PictruePre
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send
</UL>

<P><STRONG><a name="[6a]"></a>delay_ms</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, delay.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceOut
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ini_Lcd
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open_UP
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_ALL
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read1Byte
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write1Byte
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_IRQHandler
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
</UL>

<P><STRONG><a name="[d2]"></a>Ex_NVIC_Config</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, sys.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Ex_NVIC_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitKeyboard
</UL>

<P><STRONG><a name="[1ac]"></a>MY_NVIC_SetVectorTable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, sys.o(.text), UNUSED)

<P><STRONG><a name="[a5]"></a>MY_NVIC_PriorityGroupConfig</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, sys.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MY_NVIC_Init
</UL>

<P><STRONG><a name="[a4]"></a>MY_NVIC_Init</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, sys.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = MY_NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MY_NVIC_PriorityGroupConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitKeyboard
</UL>

<P><STRONG><a name="[1ad]"></a>WFI_SET</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, sys.o(.text), UNUSED)

<P><STRONG><a name="[1ae]"></a>INTX_DISABLE</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, sys.o(.text), UNUSED)

<P><STRONG><a name="[1af]"></a>INTX_ENABLE</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, sys.o(.text), UNUSED)

<P><STRONG><a name="[5f]"></a>_sys_exit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[1b0]"></a>fputc</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, usart.o(.text), UNUSED)

<P><STRONG><a name="[1b1]"></a>Send_str</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, usart.o(.text), UNUSED)

<P><STRONG><a name="[68]"></a>uart_init</STRONG> (Thumb, 152 bytes, Stack size 32 bytes, usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = uart_init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_ALL
</UL>

<P><STRONG><a name="[33]"></a>USART1_IRQHandler</STRONG> (Thumb, 144 bytes, Stack size 8 bytes, usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USART1_IRQHandler &rArr; USART_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>ADC3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>DMA2_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>DMA2_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>DMA2_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>DMA2_Channel4_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>FSMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>RTCAlarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>TAMPER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TIM1_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TIM1_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIM1_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>TIM6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>TIM8_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>TIM8_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>TIM8_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>USBWakeUp_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>USB_HP_CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>USB_LP_CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[16b]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_stm32f10x_hd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[ac]"></a>GPIO_DeInit</STRONG> (Thumb, 172 bytes, Stack size 8 bytes, stm32f10x_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>

<P><STRONG><a name="[ae]"></a>GPIO_AFIODeInit</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, stm32f10x_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>

<P><STRONG><a name="[8b]"></a>GPIO_Init</STRONG> (Thumb, 278 bytes, Stack size 24 bytes, stm32f10x_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_Adc_Init
</UL>

<P><STRONG><a name="[1b2]"></a>GPIO_StructInit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[1b3]"></a>GPIO_ReadInputDataBit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[1b4]"></a>GPIO_ReadInputData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[1b5]"></a>GPIO_ReadOutputDataBit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[1b6]"></a>GPIO_ReadOutputData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[1b7]"></a>GPIO_SetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[1b8]"></a>GPIO_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[1b9]"></a>GPIO_WriteBit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[1ba]"></a>GPIO_Write</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[1bb]"></a>GPIO_PinLockConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[1bc]"></a>GPIO_EventOutputConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[1bd]"></a>GPIO_EventOutputCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[1be]"></a>GPIO_PinRemapConfig</STRONG> (Thumb, 138 bytes, Stack size 20 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[1bf]"></a>GPIO_EXTILineConfig</STRONG> (Thumb, 66 bytes, Stack size 12 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[1c0]"></a>GPIO_ETH_MediaInterfaceConfig</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[1c1]"></a>RCC_DeInit</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[1c2]"></a>RCC_HSEConfig</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[b0]"></a>RCC_GetFlagStatus</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, stm32f10x_rcc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_WaitForHSEStartUp
</UL>

<P><STRONG><a name="[af]"></a>RCC_WaitForHSEStartUp</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, stm32f10x_rcc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
</UL>

<P><STRONG><a name="[1c3]"></a>RCC_AdjustHSICalibrationValue</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[1c4]"></a>RCC_HSICmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[1c5]"></a>RCC_PLLConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[1c6]"></a>RCC_PLLCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[1c7]"></a>RCC_SYSCLKConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[1c8]"></a>RCC_GetSYSCLKSource</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[1c9]"></a>RCC_HCLKConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[1ca]"></a>RCC_PCLK1Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[1cb]"></a>RCC_PCLK2Config</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[1cc]"></a>RCC_ITConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[1cd]"></a>RCC_USBCLKConfig</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[8a]"></a>RCC_ADCCLKConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_Adc_Init
</UL>

<P><STRONG><a name="[1ce]"></a>RCC_LSEConfig</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[1cf]"></a>RCC_LSICmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[1d0]"></a>RCC_RTCCLKConfig</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[1d1]"></a>RCC_RTCCLKCmd</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[b3]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 192 bytes, Stack size 12 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[88]"></a>RCC_AHBPeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_Adc_Init
</UL>

<P><STRONG><a name="[89]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_Adc_Init
</UL>

<P><STRONG><a name="[d5]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_Int_Init
</UL>

<P><STRONG><a name="[ad]"></a>RCC_APB2PeriphResetCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_DeInit
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_AFIODeInit
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_DeInit
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DeInit
</UL>

<P><STRONG><a name="[b2]"></a>RCC_APB1PeriphResetCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_DeInit
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
</UL>

<P><STRONG><a name="[1d2]"></a>RCC_BackupResetCmd</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[1d3]"></a>RCC_ClockSecuritySystemCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[1d4]"></a>RCC_MCOConfig</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[1d5]"></a>RCC_ClearFlag</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[1d6]"></a>RCC_GetITStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[1d7]"></a>RCC_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[b1]"></a>USART_DeInit</STRONG> (Thumb, 134 bytes, Stack size 8 bytes, stm32f10x_usart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>

<P><STRONG><a name="[a7]"></a>USART_Init</STRONG> (Thumb, 210 bytes, Stack size 56 bytes, stm32f10x_usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
</UL>

<P><STRONG><a name="[1d8]"></a>USART_StructInit</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[1d9]"></a>USART_ClockInit</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[1da]"></a>USART_ClockStructInit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[a9]"></a>USART_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
</UL>

<P><STRONG><a name="[a8]"></a>USART_ITConfig</STRONG> (Thumb, 74 bytes, Stack size 20 bytes, stm32f10x_usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = USART_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
</UL>

<P><STRONG><a name="[1db]"></a>USART_DMACmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[1dc]"></a>USART_SetAddress</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[1dd]"></a>USART_WakeUpConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[1de]"></a>USART_ReceiverWakeUpCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[1df]"></a>USART_LINBreakDetectLengthConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[1e0]"></a>USART_LINCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[1e1]"></a>USART_SendData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[ab]"></a>USART_ReceiveData</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[1e2]"></a>USART_SendBreak</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[1e3]"></a>USART_SetGuardTime</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[1e4]"></a>USART_SetPrescaler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[1e5]"></a>USART_SmartCardCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[1e6]"></a>USART_SmartCardNACKCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[1e7]"></a>USART_HalfDuplexCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[1e8]"></a>USART_OverSampling8Cmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[1e9]"></a>USART_OneBitMethodCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[1ea]"></a>USART_IrDAConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[1eb]"></a>USART_IrDACmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[1ec]"></a>USART_GetFlagStatus</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[1ed]"></a>USART_ClearFlag</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[aa]"></a>USART_GetITStatus</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, stm32f10x_usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USART_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[1ee]"></a>USART_ClearITPendingBit</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[61]"></a>NVIC_PriorityGroupConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, misc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_ALL
</UL>

<P><STRONG><a name="[a6]"></a>NVIC_Init</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, misc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_Int_Init
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_Int_Init
</UL>

<P><STRONG><a name="[1ef]"></a>NVIC_SetVectorTable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, misc.o(.text), UNUSED)

<P><STRONG><a name="[1f0]"></a>NVIC_SystemLPConfig</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, misc.o(.text), UNUSED)

<P><STRONG><a name="[a3]"></a>SysTick_CLKSourceConfig</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, misc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_init
</UL>

<P><STRONG><a name="[1f1]"></a>FLASH_SetLatency</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text), UNUSED)

<P><STRONG><a name="[1f2]"></a>FLASH_HalfCycleAccessCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text), UNUSED)

<P><STRONG><a name="[1f3]"></a>FLASH_PrefetchBufferCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text), UNUSED)

<P><STRONG><a name="[84]"></a>FLASH_Unlock</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STMFLASH_Write
</UL>

<P><STRONG><a name="[1f4]"></a>FLASH_UnlockBank1</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text), UNUSED)

<P><STRONG><a name="[86]"></a>FLASH_Lock</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STMFLASH_Write
</UL>

<P><STRONG><a name="[1f5]"></a>FLASH_LockBank1</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text), UNUSED)

<P><STRONG><a name="[b5]"></a>FLASH_GetBank1Status</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastBank1Operation
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[b4]"></a>FLASH_WaitForLastOperation</STRONG> (Thumb, 38 bytes, Stack size 4 bytes, stm32f10x_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_GetBank1Status
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_UserOptionByteConfig
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ReadOutProtection
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_EnableWriteProtection
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramOptionByteData
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramWord
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_EraseOptionBytes
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_EraseAllPages
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramHalfWord
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
</UL>

<P><STRONG><a name="[85]"></a>FLASH_ErasePage</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, stm32f10x_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FLASH_ErasePage &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STMFLASH_Write
</UL>

<P><STRONG><a name="[b6]"></a>FLASH_EraseAllPages</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, stm32f10x_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[b7]"></a>FLASH_WaitForLastBank1Operation</STRONG> (Thumb, 38 bytes, Stack size 4 bytes, stm32f10x_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_GetBank1Status
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_EraseAllBank1Pages
</UL>

<P><STRONG><a name="[b8]"></a>FLASH_EraseAllBank1Pages</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, stm32f10x_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastBank1Operation
</UL>

<P><STRONG><a name="[ba]"></a>FLASH_GetReadOutProtectionStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_EraseOptionBytes
</UL>

<P><STRONG><a name="[b9]"></a>FLASH_EraseOptionBytes</STRONG> (Thumb, 150 bytes, Stack size 12 bytes, stm32f10x_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_GetReadOutProtectionStatus
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[bb]"></a>FLASH_ProgramWord</STRONG> (Thumb, 102 bytes, Stack size 20 bytes, stm32f10x_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[80]"></a>FLASH_ProgramHalfWord</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, stm32f10x_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STMFLASH_Write_NoCheck
</UL>

<P><STRONG><a name="[bc]"></a>FLASH_ProgramOptionByteData</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, stm32f10x_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[bd]"></a>FLASH_EnableWriteProtection</STRONG> (Thumb, 200 bytes, Stack size 28 bytes, stm32f10x_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[be]"></a>FLASH_ReadOutProtection</STRONG> (Thumb, 156 bytes, Stack size 12 bytes, stm32f10x_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[bf]"></a>FLASH_UserOptionByteConfig</STRONG> (Thumb, 88 bytes, Stack size 20 bytes, stm32f10x_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[1f6]"></a>FLASH_GetUserOptionByte</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text), UNUSED)

<P><STRONG><a name="[1f7]"></a>FLASH_GetWriteProtectionOptionByte</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text), UNUSED)

<P><STRONG><a name="[1f8]"></a>FLASH_GetPrefetchBufferStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text), UNUSED)

<P><STRONG><a name="[1f9]"></a>FLASH_ITConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text), UNUSED)

<P><STRONG><a name="[1fa]"></a>FLASH_GetFlagStatus</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text), UNUSED)

<P><STRONG><a name="[1fb]"></a>FLASH_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text), UNUSED)

<P><STRONG><a name="[1fc]"></a>FLASH_GetStatus</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text), UNUSED)

<P><STRONG><a name="[c0]"></a>TIM_DeInit</STRONG> (Thumb, 424 bytes, Stack size 8 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>

<P><STRONG><a name="[d6]"></a>TIM_TimeBaseInit</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_Int_Init
</UL>

<P><STRONG><a name="[1fd]"></a>TIM_OC1Init</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[1fe]"></a>TIM_OC2Init</STRONG> (Thumb, 154 bytes, Stack size 16 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[1ff]"></a>TIM_OC3Init</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[200]"></a>TIM_OC4Init</STRONG> (Thumb, 182 bytes, Stack size 16 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[c9]"></a>TIM_SetIC4Prescaler</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[c7]"></a>TIM_SetIC3Prescaler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[c5]"></a>TIM_SetIC2Prescaler</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMIConfig
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[c3]"></a>TIM_SetIC1Prescaler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMIConfig
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[c1]"></a>TIM_ICInit</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC1Prescaler
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC2Prescaler
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC3Prescaler
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC4Prescaler
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI1_Config
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI2_Config
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI3_Config
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI4_Config
</UL>

<P><STRONG><a name="[ca]"></a>TIM_PWMIConfig</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC1Prescaler
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC2Prescaler
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI1_Config
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI2_Config
</UL>

<P><STRONG><a name="[201]"></a>TIM_BDTRConfig</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[202]"></a>TIM_TimeBaseStructInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[203]"></a>TIM_OCStructInit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[204]"></a>TIM_ICStructInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[205]"></a>TIM_BDTRStructInit</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[d8]"></a>TIM_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_Int_Init
</UL>

<P><STRONG><a name="[206]"></a>TIM_CtrlPWMOutputs</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[d7]"></a>TIM_ITConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_Int_Init
</UL>

<P><STRONG><a name="[207]"></a>TIM_GenerateEvent</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[208]"></a>TIM_DMAConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[209]"></a>TIM_DMACmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[20a]"></a>TIM_InternalClockConfig</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[cc]"></a>TIM_SelectInputTrigger</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TIxExternalClockConfig
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITRxExternalClockConfig
</UL>

<P><STRONG><a name="[cb]"></a>TIM_ITRxExternalClockConfig</STRONG> (Thumb, 24 bytes, Stack size 12 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SelectInputTrigger
</UL>

<P><STRONG><a name="[cd]"></a>TIM_TIxExternalClockConfig</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SelectInputTrigger
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI1_Config
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI2_Config
</UL>

<P><STRONG><a name="[cf]"></a>TIM_ETRConfig</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ETRClockMode2Config
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ETRClockMode1Config
</UL>

<P><STRONG><a name="[ce]"></a>TIM_ETRClockMode1Config</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ETRConfig
</UL>

<P><STRONG><a name="[d0]"></a>TIM_ETRClockMode2Config</STRONG> (Thumb, 32 bytes, Stack size 20 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ETRConfig
</UL>

<P><STRONG><a name="[20b]"></a>TIM_PrescalerConfig</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[20c]"></a>TIM_CounterModeConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[20d]"></a>TIM_EncoderInterfaceConfig</STRONG> (Thumb, 66 bytes, Stack size 20 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[20e]"></a>TIM_ForcedOC1Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[20f]"></a>TIM_ForcedOC2Config</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[210]"></a>TIM_ForcedOC3Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[211]"></a>TIM_ForcedOC4Config</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[212]"></a>TIM_ARRPreloadConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[213]"></a>TIM_SelectCOM</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[214]"></a>TIM_SelectCCDMA</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[215]"></a>TIM_CCPreloadControl</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[216]"></a>TIM_OC1PreloadConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[217]"></a>TIM_OC2PreloadConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[218]"></a>TIM_OC3PreloadConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[219]"></a>TIM_OC4PreloadConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[21a]"></a>TIM_OC1FastConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[21b]"></a>TIM_OC2FastConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[21c]"></a>TIM_OC3FastConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[21d]"></a>TIM_OC4FastConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[21e]"></a>TIM_ClearOC1Ref</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[21f]"></a>TIM_ClearOC2Ref</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[220]"></a>TIM_ClearOC3Ref</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[221]"></a>TIM_ClearOC4Ref</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[222]"></a>TIM_OC1PolarityConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[223]"></a>TIM_OC1NPolarityConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[224]"></a>TIM_OC2PolarityConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[225]"></a>TIM_OC2NPolarityConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[226]"></a>TIM_OC3PolarityConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[227]"></a>TIM_OC3NPolarityConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[228]"></a>TIM_OC4PolarityConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[229]"></a>TIM_CCxCmd</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[22a]"></a>TIM_CCxNCmd</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[22b]"></a>TIM_SelectOCxM</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[22c]"></a>TIM_UpdateDisableConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[22d]"></a>TIM_UpdateRequestConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[22e]"></a>TIM_SelectHallSensor</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[22f]"></a>TIM_SelectOnePulseMode</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[230]"></a>TIM_SelectOutputTrigger</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[231]"></a>TIM_SelectSlaveMode</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[232]"></a>TIM_SelectMasterSlaveMode</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[233]"></a>TIM_SetCounter</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[234]"></a>TIM_SetAutoreload</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[235]"></a>TIM_SetCompare1</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[236]"></a>TIM_SetCompare2</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[237]"></a>TIM_SetCompare3</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[238]"></a>TIM_SetCompare4</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[239]"></a>TIM_SetClockDivision</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[23a]"></a>TIM_GetCapture1</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[23b]"></a>TIM_GetCapture2</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[23c]"></a>TIM_GetCapture3</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[23d]"></a>TIM_GetCapture4</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[23e]"></a>TIM_GetCounter</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[23f]"></a>TIM_GetPrescaler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[240]"></a>TIM_GetFlagStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[241]"></a>TIM_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[d9]"></a>TIM_GetITStatus</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, stm32f10x_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
</UL>

<P><STRONG><a name="[db]"></a>TIM_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
</UL>

<P><STRONG><a name="[8d]"></a>DMA_DeInit</STRONG> (Thumb, 324 bytes, Stack size 0 bytes, stm32f10x_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_Adc_Init
</UL>

<P><STRONG><a name="[8e]"></a>DMA_Init</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, stm32f10x_dma.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_Adc_Init
</UL>

<P><STRONG><a name="[242]"></a>DMA_StructInit</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_dma.o(.text), UNUSED)

<P><STRONG><a name="[97]"></a>DMA_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_Adc_Init
</UL>

<P><STRONG><a name="[243]"></a>DMA_ITConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_dma.o(.text), UNUSED)

<P><STRONG><a name="[244]"></a>DMA_SetCurrDataCounter</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_dma.o(.text), UNUSED)

<P><STRONG><a name="[245]"></a>DMA_GetCurrDataCounter</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_dma.o(.text), UNUSED)

<P><STRONG><a name="[246]"></a>DMA_GetFlagStatus</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, stm32f10x_dma.o(.text), UNUSED)

<P><STRONG><a name="[247]"></a>DMA_ClearFlag</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_dma.o(.text), UNUSED)

<P><STRONG><a name="[248]"></a>DMA_GetITStatus</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, stm32f10x_dma.o(.text), UNUSED)

<P><STRONG><a name="[249]"></a>DMA_ClearITPendingBit</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_dma.o(.text), UNUSED)

<P><STRONG><a name="[8c]"></a>ADC_DeInit</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, stm32f10x_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_Adc_Init
</UL>

<P><STRONG><a name="[90]"></a>ADC_Init</STRONG> (Thumb, 70 bytes, Stack size 12 bytes, stm32f10x_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ADC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_Adc_Init
</UL>

<P><STRONG><a name="[24a]"></a>ADC_StructInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[91]"></a>ADC_Cmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_Adc_Init
</UL>

<P><STRONG><a name="[92]"></a>ADC_DMACmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_Adc_Init
</UL>

<P><STRONG><a name="[24b]"></a>ADC_ITConfig</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[93]"></a>ADC_ResetCalibration</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_Adc_Init
</UL>

<P><STRONG><a name="[94]"></a>ADC_GetResetCalibrationStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_Adc_Init
</UL>

<P><STRONG><a name="[95]"></a>ADC_StartCalibration</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_Adc_Init
</UL>

<P><STRONG><a name="[96]"></a>ADC_GetCalibrationStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_Adc_Init
</UL>

<P><STRONG><a name="[98]"></a>ADC_SoftwareStartConvCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_Adc_Init
</UL>

<P><STRONG><a name="[24c]"></a>ADC_GetSoftwareStartConvStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[24d]"></a>ADC_DiscModeChannelCountConfig</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[24e]"></a>ADC_DiscModeCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[8f]"></a>ADC_RegularChannelConfig</STRONG> (Thumb, 184 bytes, Stack size 20 bytes, stm32f10x_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ADC_RegularChannelConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_Adc_Init
</UL>

<P><STRONG><a name="[24f]"></a>ADC_ExternalTrigConvCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[250]"></a>ADC_GetConversionValue</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[251]"></a>ADC_GetDualModeConversionValue</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[252]"></a>ADC_AutoInjectedConvCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[253]"></a>ADC_InjectedDiscModeCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[254]"></a>ADC_ExternalTrigInjectedConvConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[255]"></a>ADC_ExternalTrigInjectedConvCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[256]"></a>ADC_SoftwareStartInjectedConvCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[257]"></a>ADC_GetSoftwareStartInjectedConvCmdStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[258]"></a>ADC_InjectedChannelConfig</STRONG> (Thumb, 130 bytes, Stack size 20 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[259]"></a>ADC_InjectedSequencerLengthConfig</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[25a]"></a>ADC_SetInjectedOffset</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[25b]"></a>ADC_GetInjectedConversionValue</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[25c]"></a>ADC_AnalogWatchdogCmd</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[25d]"></a>ADC_AnalogWatchdogThresholdsConfig</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[25e]"></a>ADC_AnalogWatchdogSingleChannelConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[25f]"></a>ADC_TempSensorVrefintCmd</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[260]"></a>ADC_GetFlagStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[261]"></a>ADC_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[262]"></a>ADC_GetITStatus</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[263]"></a>ADC_ClearITPendingBit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[65]"></a>InitKeyboard</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, keyboard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = InitKeyboard &rArr; MY_NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MY_NVIC_Init
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ex_NVIC_Config
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_ALL
</UL>

<P><STRONG><a name="[25]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 484 bytes, Stack size 8 bytes, keyboard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI9_5_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, keyboard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI4_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[da]"></a>key_Event</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, keyboard.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
</UL>

<P><STRONG><a name="[111]"></a>key_event_buys</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, keyboard.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CurrentDisplay
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Userset
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HX_Function
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;History_Query
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_History_Check
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearHistoryData_Dis
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_HistoryEDI_Add
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_HistoryUP_Add
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_HistoryRO_Add
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserCodeJudge
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopTime_Set
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartTime_Set
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communication_Set
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserCodeChange
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Change_RO_UP
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS1302_TimeSet
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceWash
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_UserCheck
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftwareInformation
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompanyInformation
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_Input
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_Output
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_SC_Conductance
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWater
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUP_Quantify
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEDI_Quantify
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRO_Quantify
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUP
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEDI
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRO
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_Interface
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Restore_Factory_Setting
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdminCodeJudge
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_EDI_Conductance_Rang
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_RO_Conductance_Rang
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_Force_Stop_GetWater
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_Voltage_offset
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_WaterQuality_ED
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_WaterQuality_RO
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_WaterQuality_XH_TM
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_WaterQuality_XH
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_WaterQuality_UP
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_Version_Set
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_Conductance_EDI_ADJ_Set
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_Conductance_source_ADJ_Set
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_Conductance_ADJ_Set
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_Resistivity_ADJ_Set
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_ED_Flow_Set
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_UP_Flow_Set
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_RO_Flow_Set
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_VoiceTest
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_WaterTest
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_OutputTest
</UL>

<P><STRONG><a name="[73]"></a>key_event_lesure</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, keyboard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = key_event_lesure
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_Event_Over
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open_UP
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CurrentDisplay
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Userset
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HX_Function
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;History_Query
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_History_Check
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearHistoryData_Dis
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_HistoryEDI_Add
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_HistoryUP_Add
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_HistoryRO_Add
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserCodeJudge
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopTime_Set
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartTime_Set
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communication_Set
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserCodeChange
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Change_RO_UP
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS1302_TimeSet
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceWash
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_UserCheck
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftwareInformation
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompanyInformation
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_Input
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_Output
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_SC_Conductance
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWater
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUP_Quantify
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEDI_Quantify
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRO_Quantify
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUP
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEDI
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRO
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_Interface
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Restore_Factory_Setting
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdminCodeJudge
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_EDI_Conductance_Rang
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_RO_Conductance_Rang
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_Force_Stop_GetWater
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_Voltage_offset
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_WaterQuality_ED
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_WaterQuality_RO
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_WaterQuality_XH_TM
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_WaterQuality_XH
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_WaterQuality_UP
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_Version_Set
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_Conductance_EDI_ADJ_Set
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_Conductance_source_ADJ_Set
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_Conductance_ADJ_Set
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_Resistivity_ADJ_Set
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_ED_Flow_Set
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_UP_Flow_Set
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_RO_Flow_Set
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_VoiceTest
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_WaterTest
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_OutputTest
</UL>

<P><STRONG><a name="[d4]"></a>TIM4_Int_Init</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TIM4_Int_Init &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_Int_Init
</UL>

<P><STRONG><a name="[6b]"></a>TIM3_Int_Init</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = TIM3_Int_Init &rArr; TIM4_Int_Init &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_Int_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_ALL
</UL>

<P><STRONG><a name="[2b]"></a>TIM3_IRQHandler</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM3_IRQHandler &rArr; TIM_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetITStatus
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_Event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e6]"></a>TmRegsiter</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TmRegsiter
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;B_CX_Step1
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A_CX_Step1
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A_CX_Step2
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GET_EDI_TIMER
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GET_RO_TIMER
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GET_UP_TIMER
</UL>

<P><STRONG><a name="[dc]"></a>UnTMRegsiter</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>

<P><STRONG><a name="[e1]"></a>Event_Manage</STRONG> (Thumb, 206 bytes, Stack size 8 bytes, timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Event_Manage
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
</UL>

<P><STRONG><a name="[de]"></a>Send_MessagetoQueue</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[e0]"></a>Recevie_MessagetoQueue</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[2c]"></a>TIM4_IRQHandler</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM4_IRQHandler &rArr; Event_Manage
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Event_Manage
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[70]"></a>GET_FLOW</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GET_FLOW &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open_UP
</UL>

<P><STRONG><a name="[e5]"></a>OFF_UPF</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, timer.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> timer.o(.text)
</UL>
<P><STRONG><a name="[e2]"></a>GET_UP_TIMER</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TmRegsiter
</UL>

<P><STRONG><a name="[e8]"></a>OFF_ROF</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, timer.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> timer.o(.text)
</UL>
<P><STRONG><a name="[e7]"></a>GET_RO_TIMER</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TmRegsiter
</UL>

<P><STRONG><a name="[ea]"></a>OFF_EDIF</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, timer.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> timer.o(.text)
</UL>
<P><STRONG><a name="[e9]"></a>GET_EDI_TIMER</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TmRegsiter
</UL>

<P><STRONG><a name="[eb]"></a>Iinit_Output_Io</STRONG> (Thumb, 178 bytes, Stack size 0 bytes, io.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IO_INIT
</UL>

<P><STRONG><a name="[ec]"></a>Init_In_IO</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, io.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IO_INIT
</UL>

<P><STRONG><a name="[66]"></a>IO_INIT</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, io.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = IO_INIT
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_In_IO
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Iinit_Output_Io
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_ALL
</UL>

<P><STRONG><a name="[110]"></a>Close_ALL_IO</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, io.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_OutputTest
</UL>

<P><STRONG><a name="[ed]"></a>Seve_Userdata</STRONG> (Thumb, 172 bytes, Stack size 32 bytes, falshmanege.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = Seve_Userdata &rArr; STMFLASH_Write &rArr; STMFLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STMFLASH_Write
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Userdata
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopTime_Set
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartTime_Set
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserCodeChange
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUP_Quantify
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEDI_Quantify
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRO_Quantify
</UL>

<P><STRONG><a name="[6e]"></a>Read_Userdata</STRONG> (Thumb, 508 bytes, Stack size 32 bytes, falshmanege.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = Read_Userdata &rArr; Seve_Userdata &rArr; STMFLASH_Write &rArr; STMFLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STMFLASH_Read
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seve_Userdata
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open_UP
</UL>

<P><STRONG><a name="[ef]"></a>Writer_GetWater_Data</STRONG> (Thumb, 238 bytes, Stack size 80 bytes, falshmanege.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = Writer_GetWater_Data &rArr; Test_Write &rArr; STMFLASH_Write &rArr; STMFLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_Write
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STMFLASH_Write
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STMFLASH_Read
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STMFLASH_ReadHalfWord
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BurstRead1302
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_UP_GETWarte
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_EDI_GETWarte
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_RO_GETWarte
</UL>

<P><STRONG><a name="[f0]"></a>Clean_GetWater_Data</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, falshmanege.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = Clean_GetWater_Data &rArr; Test_Write &rArr; STMFLASH_Write &rArr; STMFLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_Write
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STMFLASH_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearHistoryData_Dis
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Restore_Factory_Setting
</UL>

<P><STRONG><a name="[f1]"></a>Seve_Admindata</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, falshmanege.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = Seve_Admindata &rArr; STMFLASH_Write &rArr; STMFLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STMFLASH_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HX_Function
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Restore_Factory_Setting
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_EDI_Conductance_Rang
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_RO_Conductance_Rang
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_Force_Stop_GetWater
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_Voltage_offset
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_WaterQuality_ED
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_WaterQuality_RO
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_WaterQuality_XH_TM
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_WaterQuality_XH
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_WaterQuality_UP
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_Version_Set
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_Conductance_EDI_ADJ_Set
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_Conductance_source_ADJ_Set
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_Conductance_ADJ_Set
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_Resistivity_ADJ_Set
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_ED_Flow_Set
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_UP_Flow_Set
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_RO_Flow_Set
</UL>

<P><STRONG><a name="[6f]"></a>Read_Admindata</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, falshmanege.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = Read_Admindata &rArr; Test_Write &rArr; STMFLASH_Write &rArr; STMFLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_Write
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STMFLASH_ReadHalfWord
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open_UP
</UL>

<P><STRONG><a name="[f2]"></a>A_CX_Step3</STRONG> (Thumb, 164 bytes, Stack size 8 bytes, app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = A_CX_Step3 &rArr; VoiceOut
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceOut
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app.o(.text)
</UL>
<P><STRONG><a name="[f3]"></a>A_CX_Step2</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = A_CX_Step2 &rArr; TmRegsiter
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TmRegsiter
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app.o(.text)
</UL>
<P><STRONG><a name="[f4]"></a>A_CX_Step1</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = A_CX_Step1 &rArr; VoiceOut
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceOut
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TmRegsiter
</UL>
<BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceWash
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Machine_D_Routine
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Machine_C_Routine
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Machine_A_Routine
</UL>

<P><STRONG><a name="[f5]"></a>Machine_A_Routine</STRONG> (Thumb, 620 bytes, Stack size 8 bytes, app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Machine_A_Routine &rArr; A_CX_Step1 &rArr; VoiceOut
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceOut
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A_CX_Step1
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sotf_Versions_Controller
</UL>

<P><STRONG><a name="[f7]"></a>B_CX_Step2</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, app.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> app.o(.text)
</UL>
<P><STRONG><a name="[f6]"></a>B_CX_Step1</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = B_CX_Step1 &rArr; VoiceOut
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceOut
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TmRegsiter
</UL>
<BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceWash
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Machine_B_Routine
</UL>

<P><STRONG><a name="[f8]"></a>Machine_B_Routine</STRONG> (Thumb, 1388 bytes, Stack size 8 bytes, app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Machine_B_Routine &rArr; B_CX_Step1 &rArr; VoiceOut
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceOut
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;B_CX_Step1
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sotf_Versions_Controller
</UL>

<P><STRONG><a name="[f9]"></a>Machine_C_Routine</STRONG> (Thumb, 700 bytes, Stack size 8 bytes, app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Machine_C_Routine &rArr; A_CX_Step1 &rArr; VoiceOut
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceOut
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A_CX_Step1
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sotf_Versions_Controller
</UL>

<P><STRONG><a name="[fa]"></a>Machine_D_Routine</STRONG> (Thumb, 662 bytes, Stack size 8 bytes, app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Machine_D_Routine &rArr; A_CX_Step1 &rArr; VoiceOut
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceOut
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A_CX_Step1
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sotf_Versions_Controller
</UL>

<P><STRONG><a name="[79]"></a>Sotf_Versions_Controller</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Sotf_Versions_Controller &rArr; Machine_D_Routine &rArr; A_CX_Step1 &rArr; VoiceOut
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Machine_D_Routine
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Machine_C_Routine
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Machine_B_Routine
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Machine_A_Routine
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CurrentDisplay
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Userset
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HX_Function
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;History_Query
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_History_Check
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearHistoryData_Dis
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_HistoryEDI_Add
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_HistoryUP_Add
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_HistoryRO_Add
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserCodeJudge
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopTime_Set
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartTime_Set
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communication_Set
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserCodeChange
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Change_RO_UP
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS1302_TimeSet
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceWash
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_UserCheck
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftwareInformation
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompanyInformation
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_Input
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_Output
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_SC_Conductance
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWater
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUP_Quantify
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEDI_Quantify
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRO_Quantify
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUP
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEDI
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRO
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_Interface
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdminCodeJudge
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_EDI_Conductance_Rang
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_RO_Conductance_Rang
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_Force_Stop_GetWater
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_Voltage_offset
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_WaterQuality_ED
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_WaterQuality_RO
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_WaterQuality_XH_TM
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_WaterQuality_XH
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_WaterQuality_UP
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_Version_Set
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_Conductance_EDI_ADJ_Set
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_Conductance_source_ADJ_Set
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_Conductance_ADJ_Set
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_Resistivity_ADJ_Set
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_ED_Flow_Set
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_UP_Flow_Set
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_RO_Flow_Set
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_VoiceTest
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_WaterTest
</UL>

<P><STRONG><a name="[fb]"></a>Send</STRONG> (Thumb, 230 bytes, Stack size 32 bytes, dis12864.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Send
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ini_Lcd
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_PM
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clr_Pictrue
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OppositeColor
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clr_PictruePre
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_TX
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_CGROM
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_GDRAM
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_HZ
</UL>

<P><STRONG><a name="[fd]"></a>Disp_HZ</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, dis12864.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Disp_HZ &rArr; Send
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Refresh
</UL>

<P><STRONG><a name="[fe]"></a>Display_Refresh</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, dis12864.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Display_Refresh &rArr; Disp_HZ &rArr; Send
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_HZ
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_RefreshAll
</UL>

<P><STRONG><a name="[76]"></a>Display_RefreshAll</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, dis12864.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Display_RefreshAll &rArr; Display_Refresh &rArr; Disp_HZ &rArr; Send
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Refresh
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ini_Lcd
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open_UP
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CurrentDisplay
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Userset
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HX_Function
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;History_Query
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_History_Check
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearHistoryData_Dis
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_HistoryEDI_Add
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_HistoryUP_Add
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_HistoryRO_Add
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserCodeJudge
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopTime_Set
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartTime_Set
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communication_Set
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserCodeChange
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Change_RO_UP
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS1302_TimeSet
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceWash
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_UserCheck
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftwareInformation
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompanyInformation
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_Input
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_Output
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_SC_Conductance
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWater
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUP_Quantify
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEDI_Quantify
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRO_Quantify
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUP
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEDI
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRO
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_Interface
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Restore_Factory_Setting
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdminCodeJudge
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_EDI_Conductance_Rang
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_RO_Conductance_Rang
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_Force_Stop_GetWater
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_Voltage_offset
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_WaterQuality_ED
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_WaterQuality_RO
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_WaterQuality_XH_TM
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_WaterQuality_XH
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_WaterQuality_UP
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_Version_Set
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_Conductance_EDI_ADJ_Set
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_Conductance_source_ADJ_Set
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_Conductance_ADJ_Set
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_Resistivity_ADJ_Set
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_ED_Flow_Set
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_UP_Flow_Set
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_RO_Flow_Set
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_VoiceTest
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_WaterTest
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_OutputTest
</UL>

<P><STRONG><a name="[77]"></a>DisplayBuf_Clr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, dis12864.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ini_Lcd
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open_UP
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CurrentDisplay
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Userset
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HX_Function
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;History_Query
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_History_Check
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearHistoryData_Dis
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_HistoryEDI_Add
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_HistoryUP_Add
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_HistoryRO_Add
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserCodeJudge
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopTime_Set
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartTime_Set
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communication_Set
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserCodeChange
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Change_RO_UP
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS1302_TimeSet
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceWash
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_UserCheck
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftwareInformation
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompanyInformation
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_Input
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_Output
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_SC_Conductance
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWater
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUP_Quantify
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEDI_Quantify
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRO_Quantify
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUP
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEDI
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRO
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_Interface
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Restore_Factory_Setting
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdminCodeJudge
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_EDI_Conductance_Rang
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_RO_Conductance_Rang
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_Force_Stop_GetWater
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_Voltage_offset
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_WaterQuality_ED
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_WaterQuality_RO
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_WaterQuality_XH_TM
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_WaterQuality_XH
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_WaterQuality_UP
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_Version_Set
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_Conductance_EDI_ADJ_Set
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_Conductance_source_ADJ_Set
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_Conductance_ADJ_Set
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_Resistivity_ADJ_Set
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_ED_Flow_Set
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_UP_Flow_Set
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_RO_Flow_Set
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_VoiceTest
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_WaterTest
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_OutputTest
</UL>

<P><STRONG><a name="[ff]"></a>Clear_GDRAM</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, dis12864.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Clear_GDRAM &rArr; Send
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ini_Lcd
</UL>

<P><STRONG><a name="[100]"></a>Draw_CGROM</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, dis12864.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Draw_CGROM &rArr; Send
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ini_Lcd
</UL>

<P><STRONG><a name="[64]"></a>Ini_Lcd</STRONG> (Thumb, 228 bytes, Stack size 8 bytes, dis12864.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Ini_Lcd &rArr; Display_RefreshAll &rArr; Display_Refresh &rArr; Disp_HZ &rArr; Send
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_RefreshAll
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayBuf_Clr
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_CGROM
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_GDRAM
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_ALL
</UL>

<P><STRONG><a name="[75]"></a>Draw_PM</STRONG> (Thumb, 146 bytes, Stack size 24 bytes, dis12864.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Draw_PM &rArr; Send
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open_UP
</UL>

<P><STRONG><a name="[101]"></a>Draw_TX</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, dis12864.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send
</UL>

<P><STRONG><a name="[78]"></a>Clr_Pictrue</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, dis12864.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Clr_Pictrue &rArr; Send
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open_UP
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CurrentDisplay
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Userset
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HX_Function
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;History_Query
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_History_Check
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearHistoryData_Dis
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_HistoryEDI_Add
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_HistoryUP_Add
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_HistoryRO_Add
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserCodeJudge
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopTime_Set
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartTime_Set
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserCodeChange
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Change_RO_UP
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS1302_TimeSet
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceWash
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_UserCheck
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftwareInformation
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompanyInformation
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_Input
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_Output
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_SC_Conductance
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWater
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUP
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEDI
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRO
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_Interface
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdminCodeJudge
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_EDI_Conductance_Rang
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_RO_Conductance_Rang
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_Force_Stop_GetWater
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_Version_Set
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_VoiceTest
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_WaterTest
</UL>

<P><STRONG><a name="[102]"></a>Clr_PictruePre</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, dis12864.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Clr_PictruePre &rArr; Send
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OppositeColor
</UL>

<P><STRONG><a name="[103]"></a>OppositeColor</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, dis12864.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = OppositeColor &rArr; Clr_PictruePre &rArr; Send
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clr_PictruePre
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send
</UL>
<BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CurrentDisplay
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Userset
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HX_Function
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;History_Query
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_History_Check
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearHistoryData_Dis
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_HistoryEDI_Add
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_HistoryUP_Add
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_HistoryRO_Add
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserCodeJudge
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopTime_Set
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartTime_Set
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communication_Set
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserCodeChange
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Change_RO_UP
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS1302_TimeSet
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceWash
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_UserCheck
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftwareInformation
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompanyInformation
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_Input
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_Output
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_SC_Conductance
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWater
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUP_Quantify
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEDI_Quantify
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRO_Quantify
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUP
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEDI
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRO
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_Interface
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Restore_Factory_Setting
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdminCodeJudge
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_EDI_Conductance_Rang
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_RO_Conductance_Rang
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_Force_Stop_GetWater
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_Voltage_offset
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_WaterQuality_ED
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_WaterQuality_RO
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_WaterQuality_XH_TM
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_WaterQuality_XH
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_WaterQuality_UP
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_Version_Set
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_Conductance_EDI_ADJ_Set
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_Conductance_source_ADJ_Set
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_Conductance_ADJ_Set
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_Resistivity_ADJ_Set
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_ED_Flow_Set
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_UP_Flow_Set
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_RO_Flow_Set
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_VoiceTest
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_WaterTest
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_OutputTest
</UL>

<P><STRONG><a name="[132]"></a>DisplayBuf_ClrRow</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, dis12864.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowVersion
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_SC_Conductance
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUP_Quantify
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEDI_Quantify
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRO_Quantify
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUP
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEDI
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRO
</UL>

<P><STRONG><a name="[264]"></a>DisplayTemp</STRONG> (Thumb, 358 bytes, Stack size 16 bytes, dis12864.o(.text), UNUSED)

<P><STRONG><a name="[265]"></a>DisplayHum</STRONG> (Thumb, 128 bytes, Stack size 12 bytes, dis12864.o(.text), UNUSED)

<P><STRONG><a name="[104]"></a>DisplayFloat</STRONG> (Thumb, 270 bytes, Stack size 24 bytes, dis12864.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = DisplayFloat &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_History_Check
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_SC_Conductance
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUP_Quantify
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEDI_Quantify
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRO_Quantify
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUP
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEDI
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRO
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_WaterTest
</UL>

<P><STRONG><a name="[15a]"></a>DisplayFloat1</STRONG> (Thumb, 276 bytes, Stack size 16 bytes, dis12864.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DisplayFloat1
</UL>
<BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_History_Check
</UL>

<P><STRONG><a name="[266]"></a>DisplayInt</STRONG> (Thumb, 220 bytes, Stack size 16 bytes, dis12864.o(.text), UNUSED)

<P><STRONG><a name="[105]"></a>DS1302delay</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ds1302.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_DS1302
</UL>

<P><STRONG><a name="[63]"></a>Reset_DS1302</STRONG> (Thumb, 108 bytes, Stack size 4 bytes, ds1302.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Reset_DS1302
</UL>
<BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS1302delay
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_ALL
</UL>

<P><STRONG><a name="[106]"></a>Write1Byte</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, ds1302.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Write1Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BurstRead1302
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BurstReadRAM
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BurstWriteRAM
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BurstWrite1302
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;R_Data
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W_Data
</UL>

<P><STRONG><a name="[107]"></a>Read1Byte</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, ds1302.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Read1Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BurstRead1302
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BurstReadRAM
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;R_Data
</UL>

<P><STRONG><a name="[108]"></a>W_Data</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, ds1302.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = W_Data &rArr; Write1Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write1Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_DS1302
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BurstWriteRAM
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BurstWrite1302
</UL>

<P><STRONG><a name="[109]"></a>R_Data</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, ds1302.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read1Byte
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write1Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_DS1302
</UL>

<P><STRONG><a name="[10a]"></a>BurstWrite1302</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, ds1302.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = BurstWrite1302 &rArr; W_Data &rArr; Write1Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W_Data
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write1Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS1302_TimeSet
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Restore_Factory_Setting
</UL>

<P><STRONG><a name="[71]"></a>BurstRead1302</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, ds1302.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = BurstRead1302 &rArr; Read1Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read1Byte
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write1Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open_UP
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDataTime
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS1302_TimeSet
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Writer_GetWater_Data
</UL>

<P><STRONG><a name="[10b]"></a>BurstWriteRAM</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, ds1302.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W_Data
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write1Byte
</UL>

<P><STRONG><a name="[10c]"></a>BurstReadRAM</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, ds1302.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read1Byte
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write1Byte
</UL>

<P><STRONG><a name="[10d]"></a>Set_DS1302</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, ds1302.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W_Data
</UL>

<P><STRONG><a name="[10e]"></a>Get_DS1302</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, ds1302.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;R_Data
</UL>

<P><STRONG><a name="[129]"></a>DS1302_10toData</STRONG> (Thumb, 264 bytes, Stack size 0 bytes, ds1302.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS1302_TimeSet
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Restore_Factory_Setting
</UL>

<P><STRONG><a name="[72]"></a>DS1302_Datato10</STRONG> (Thumb, 202 bytes, Stack size 0 bytes, ds1302.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open_UP
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDataTime
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS1302_TimeSet
</UL>

<P><STRONG><a name="[14b]"></a>DS1302_POWER</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ds1302.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDataTime
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS1302_TimeSet
</UL>

<P><STRONG><a name="[15f]"></a>Timer_DisChar</STRONG> (Thumb, 256 bytes, Stack size 0 bytes, ds1302.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDataTime
</UL>

<P><STRONG><a name="[158]"></a>Timer_DisChar_EX</STRONG> (Thumb, 480 bytes, Stack size 20 bytes, ds1302.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Timer_DisChar_EX
</UL>
<BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_History_Check
</UL>

<P><STRONG><a name="[67]"></a>VoiceIO_Init</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, voice.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = VoiceIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_ALL
</UL>

<P><STRONG><a name="[74]"></a>VoiceOut</STRONG> (Thumb, 176 bytes, Stack size 16 bytes, voice.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = VoiceOut
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open_UP
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceWash
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUP_Quantify
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRO_Quantify
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUP
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRO
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GET_Warte_Judeg
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_VoiceTest
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Machine_D_Routine
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Machine_C_Routine
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Machine_B_Routine
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;B_CX_Step1
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Machine_A_Routine
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A_CX_Step1
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A_CX_Step3
</UL>

<P><STRONG><a name="[10f]"></a>Highset_OutputTest</STRONG> (Thumb, 1100 bytes, Stack size 48 bytes, admin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = Highset_OutputTest &rArr; OppositeColor &rArr; Clr_PictruePre &rArr; Send
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_lesure
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_RefreshAll
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayBuf_Clr
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OppositeColor
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close_ALL_IO
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_buys
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_Interface
</UL>

<P><STRONG><a name="[112]"></a>Highset_WaterTest</STRONG> (Thumb, 506 bytes, Stack size 32 bytes, admin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = Highset_WaterTest &rArr; OppositeColor &rArr; Clr_PictruePre &rArr; Send
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_lesure
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sotf_Versions_Controller
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_RefreshAll
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayBuf_Clr
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clr_Pictrue
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayFloat
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OppositeColor
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_buys
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_Interface
</UL>

<P><STRONG><a name="[113]"></a>Highset_VoiceTest</STRONG> (Thumb, 206 bytes, Stack size 16 bytes, admin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Highset_VoiceTest &rArr; OppositeColor &rArr; Clr_PictruePre &rArr; Send
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_lesure
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceOut
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sotf_Versions_Controller
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_RefreshAll
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayBuf_Clr
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clr_Pictrue
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OppositeColor
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_buys
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_Interface
</UL>

<P><STRONG><a name="[114]"></a>Highset_RO_Flow_Set</STRONG> (Thumb, 476 bytes, Stack size 32 bytes, admin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = Highset_RO_Flow_Set &rArr; OppositeColor &rArr; Clr_PictruePre &rArr; Send
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_lesure
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sotf_Versions_Controller
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_RefreshAll
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayBuf_Clr
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OppositeColor
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seve_Admindata
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_buys
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_Interface
</UL>

<P><STRONG><a name="[115]"></a>Highset_UP_Flow_Set</STRONG> (Thumb, 430 bytes, Stack size 32 bytes, admin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = Highset_UP_Flow_Set &rArr; OppositeColor &rArr; Clr_PictruePre &rArr; Send
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_lesure
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sotf_Versions_Controller
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_RefreshAll
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayBuf_Clr
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OppositeColor
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seve_Admindata
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_buys
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_Interface
</UL>

<P><STRONG><a name="[116]"></a>Highset_ED_Flow_Set</STRONG> (Thumb, 424 bytes, Stack size 32 bytes, admin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = Highset_ED_Flow_Set &rArr; OppositeColor &rArr; Clr_PictruePre &rArr; Send
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_lesure
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sotf_Versions_Controller
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_RefreshAll
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayBuf_Clr
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OppositeColor
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seve_Admindata
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_buys
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_Interface
</UL>

<P><STRONG><a name="[117]"></a>Highset_Resistivity_ADJ_Set</STRONG> (Thumb, 714 bytes, Stack size 24 bytes, admin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Highset_Resistivity_ADJ_Set &rArr; OppositeColor &rArr; Clr_PictruePre &rArr; Send
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_lesure
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sotf_Versions_Controller
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_RefreshAll
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayBuf_Clr
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OppositeColor
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seve_Admindata
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_buys
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_Interface
</UL>

<P><STRONG><a name="[119]"></a>RO_Dis</STRONG> (Thumb, 376 bytes, Stack size 0 bytes, admin.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_WaterQuality_RO
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_Conductance_ADJ_Set
</UL>

<P><STRONG><a name="[118]"></a>Highset_Conductance_ADJ_Set</STRONG> (Thumb, 382 bytes, Stack size 24 bytes, admin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Highset_Conductance_ADJ_Set &rArr; OppositeColor &rArr; Clr_PictruePre &rArr; Send
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_lesure
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sotf_Versions_Controller
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_RefreshAll
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayBuf_Clr
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RO_Dis
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OppositeColor
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seve_Admindata
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_buys
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_Interface
</UL>

<P><STRONG><a name="[11a]"></a>Highset_Conductance_source_ADJ_Set</STRONG> (Thumb, 720 bytes, Stack size 24 bytes, admin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Highset_Conductance_source_ADJ_Set &rArr; OppositeColor &rArr; Clr_PictruePre &rArr; Send
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_lesure
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sotf_Versions_Controller
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_RefreshAll
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayBuf_Clr
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OppositeColor
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seve_Admindata
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_buys
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_Interface
</UL>

<P><STRONG><a name="[11c]"></a>EDI_Dis</STRONG> (Thumb, 108 bytes, Stack size 0 bytes, admin.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_WaterQuality_ED
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_Conductance_EDI_ADJ_Set
</UL>

<P><STRONG><a name="[11b]"></a>Highset_Conductance_EDI_ADJ_Set</STRONG> (Thumb, 384 bytes, Stack size 24 bytes, admin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Highset_Conductance_EDI_ADJ_Set &rArr; OppositeColor &rArr; Clr_PictruePre &rArr; Send
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_lesure
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sotf_Versions_Controller
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_RefreshAll
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayBuf_Clr
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDI_Dis
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OppositeColor
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seve_Admindata
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_buys
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_Interface
</UL>

<P><STRONG><a name="[11d]"></a>Highset_Version_Set</STRONG> (Thumb, 222 bytes, Stack size 16 bytes, admin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Highset_Version_Set &rArr; OppositeColor &rArr; Clr_PictruePre &rArr; Send
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_lesure
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sotf_Versions_Controller
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_RefreshAll
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayBuf_Clr
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clr_Pictrue
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OppositeColor
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seve_Admindata
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_buys
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_Interface
</UL>

<P><STRONG><a name="[11e]"></a>Highset_WaterQuality_UP</STRONG> (Thumb, 674 bytes, Stack size 16 bytes, admin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Highset_WaterQuality_UP &rArr; OppositeColor &rArr; Clr_PictruePre &rArr; Send
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_lesure
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sotf_Versions_Controller
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_RefreshAll
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayBuf_Clr
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OppositeColor
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seve_Admindata
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_buys
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_Interface
</UL>

<P><STRONG><a name="[11f]"></a>Highset_WaterQuality_XH</STRONG> (Thumb, 624 bytes, Stack size 16 bytes, admin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Highset_WaterQuality_XH &rArr; OppositeColor &rArr; Clr_PictruePre &rArr; Send
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_lesure
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sotf_Versions_Controller
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_RefreshAll
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayBuf_Clr
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OppositeColor
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seve_Admindata
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_buys
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_Interface
</UL>

<P><STRONG><a name="[120]"></a>Highset_WaterQuality_XH_TM</STRONG> (Thumb, 612 bytes, Stack size 16 bytes, admin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Highset_WaterQuality_XH_TM &rArr; OppositeColor &rArr; Clr_PictruePre &rArr; Send
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_lesure
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sotf_Versions_Controller
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_RefreshAll
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayBuf_Clr
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OppositeColor
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seve_Admindata
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_buys
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_Interface
</UL>

<P><STRONG><a name="[121]"></a>Highset_WaterQuality_RO</STRONG> (Thumb, 318 bytes, Stack size 16 bytes, admin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Highset_WaterQuality_RO &rArr; OppositeColor &rArr; Clr_PictruePre &rArr; Send
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_lesure
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sotf_Versions_Controller
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_RefreshAll
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayBuf_Clr
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RO_Dis
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OppositeColor
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seve_Admindata
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_buys
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_Interface
</UL>

<P><STRONG><a name="[122]"></a>Highset_WaterQuality_ED</STRONG> (Thumb, 364 bytes, Stack size 16 bytes, admin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Highset_WaterQuality_ED &rArr; OppositeColor &rArr; Clr_PictruePre &rArr; Send
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_lesure
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sotf_Versions_Controller
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_RefreshAll
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayBuf_Clr
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDI_Dis
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OppositeColor
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seve_Admindata
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_buys
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_Interface
</UL>

<P><STRONG><a name="[123]"></a>Highset_Voltage_offset</STRONG> (Thumb, 308 bytes, Stack size 16 bytes, admin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Highset_Voltage_offset &rArr; OppositeColor &rArr; Clr_PictruePre &rArr; Send
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_lesure
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sotf_Versions_Controller
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_RefreshAll
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayBuf_Clr
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OppositeColor
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seve_Admindata
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_buys
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_Interface
</UL>

<P><STRONG><a name="[124]"></a>Highset_Force_Stop_GetWater</STRONG> (Thumb, 242 bytes, Stack size 16 bytes, admin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Highset_Force_Stop_GetWater &rArr; OppositeColor &rArr; Clr_PictruePre &rArr; Send
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_lesure
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sotf_Versions_Controller
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_RefreshAll
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayBuf_Clr
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clr_Pictrue
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OppositeColor
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seve_Admindata
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_buys
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_Interface
</UL>

<P><STRONG><a name="[125]"></a>Highset_RO_Conductance_Rang</STRONG> (Thumb, 238 bytes, Stack size 16 bytes, admin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Highset_RO_Conductance_Rang &rArr; OppositeColor &rArr; Clr_PictruePre &rArr; Send
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_lesure
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sotf_Versions_Controller
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_RefreshAll
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayBuf_Clr
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clr_Pictrue
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OppositeColor
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seve_Admindata
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_buys
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_Interface
</UL>

<P><STRONG><a name="[126]"></a>Highset_EDI_Conductance_Rang</STRONG> (Thumb, 272 bytes, Stack size 16 bytes, admin.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_lesure
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sotf_Versions_Controller
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_RefreshAll
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayBuf_Clr
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clr_Pictrue
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OppositeColor
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seve_Admindata
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_buys
</UL>

<P><STRONG><a name="[127]"></a>AdminCodeJudge</STRONG> (Thumb, 420 bytes, Stack size 32 bytes, admin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = AdminCodeJudge &rArr; OppositeColor &rArr; Clr_PictruePre &rArr; Send
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_lesure
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sotf_Versions_Controller
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_RefreshAll
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayBuf_Clr
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clr_Pictrue
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OppositeColor
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_buys
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_Interface
</UL>

<P><STRONG><a name="[128]"></a>Restore_Factory_Setting</STRONG> (Thumb, 346 bytes, Stack size 24 bytes, admin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = Restore_Factory_Setting &rArr; Clean_GetWater_Data &rArr; Test_Write &rArr; STMFLASH_Write &rArr; STMFLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_lesure
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_RefreshAll
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayBuf_Clr
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS1302_10toData
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BurstWrite1302
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OppositeColor
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seve_Admindata
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clean_GetWater_Data
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_buys
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_Interface
</UL>

<P><STRONG><a name="[12a]"></a>Admin_Interface</STRONG> (Thumb, 726 bytes, Stack size 24 bytes, admin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = Admin_Interface &rArr; Highset_OutputTest &rArr; OppositeColor &rArr; Clr_PictruePre &rArr; Send
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_lesure
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sotf_Versions_Controller
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_RefreshAll
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayBuf_Clr
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clr_Pictrue
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Restore_Factory_Setting
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdminCodeJudge
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_RO_Conductance_Rang
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_Force_Stop_GetWater
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_Voltage_offset
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_WaterQuality_ED
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_WaterQuality_RO
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_WaterQuality_XH_TM
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_WaterQuality_XH
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_WaterQuality_UP
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_Version_Set
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_Conductance_EDI_ADJ_Set
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_Conductance_source_ADJ_Set
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_Conductance_ADJ_Set
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_Resistivity_ADJ_Set
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_ED_Flow_Set
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_UP_Flow_Set
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_RO_Flow_Set
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_VoiceTest
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_WaterTest
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_OutputTest
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OppositeColor
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_buys
</UL>
<BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_admin
</UL>

<P><STRONG><a name="[12b]"></a>go_admin</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, admin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = go_admin &rArr; Admin_Interface &rArr; Highset_OutputTest &rArr; OppositeColor &rArr; Clr_PictruePre &rArr; Send
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Admin_Interface
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu
</UL>

<P><STRONG><a name="[12c]"></a>GET_Warte_Judeg</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, getwarte.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GET_Warte_Judeg &rArr; VoiceOut
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceOut
</UL>
<BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUP_Quantify
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEDI_Quantify
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRO_Quantify
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUP
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEDI
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRO
</UL>

<P><STRONG><a name="[12d]"></a>Change_Warn</STRONG> (Thumb, 46 bytes, Stack size 40 bytes, getwarte.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[130]"></a>Save_RO_GETWarte</STRONG> (Thumb, 176 bytes, Stack size 32 bytes, getwarte.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = Save_RO_GETWarte &rArr; Writer_GetWater_Data &rArr; Test_Write &rArr; STMFLASH_Write &rArr; STMFLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STMFLASH_Write
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STMFLASH_Read
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Writer_GetWater_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRO_Quantify
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRO
</UL>

<P><STRONG><a name="[131]"></a>GetRO</STRONG> (Thumb, 380 bytes, Stack size 24 bytes, getwarte.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = GetRO &rArr; Save_RO_GETWarte &rArr; Writer_GetWater_Data &rArr; Test_Write &rArr; STMFLASH_Write &rArr; STMFLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_lesure
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceOut
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sotf_Versions_Controller
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_RefreshAll
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayBuf_Clr
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clr_Pictrue
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_RO_GETWarte
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GET_Warte_Judeg
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayFloat
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayBuf_ClrRow
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OppositeColor
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_buys
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWater
</UL>

<P><STRONG><a name="[133]"></a>Save_EDI_GETWarte</STRONG> (Thumb, 186 bytes, Stack size 32 bytes, getwarte.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = Save_EDI_GETWarte &rArr; Writer_GetWater_Data &rArr; Test_Write &rArr; STMFLASH_Write &rArr; STMFLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STMFLASH_Write
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STMFLASH_Read
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Writer_GetWater_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEDI_Quantify
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEDI
</UL>

<P><STRONG><a name="[134]"></a>GetEDI</STRONG> (Thumb, 436 bytes, Stack size 32 bytes, getwarte.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 244<LI>Call Chain = GetEDI &rArr; Save_EDI_GETWarte &rArr; Writer_GetWater_Data &rArr; Test_Write &rArr; STMFLASH_Write &rArr; STMFLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_lesure
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sotf_Versions_Controller
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_RefreshAll
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayBuf_Clr
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clr_Pictrue
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_EDI_GETWarte
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GET_Warte_Judeg
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayFloat
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayBuf_ClrRow
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OppositeColor
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_buys
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWater
</UL>

<P><STRONG><a name="[136]"></a>Save_UP_GETWarte</STRONG> (Thumb, 186 bytes, Stack size 32 bytes, getwarte.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = Save_UP_GETWarte &rArr; Writer_GetWater_Data &rArr; Test_Write &rArr; STMFLASH_Write &rArr; STMFLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STMFLASH_Write
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STMFLASH_Read
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Writer_GetWater_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUP_Quantify
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUP
</UL>

<P><STRONG><a name="[137]"></a>GetUP</STRONG> (Thumb, 984 bytes, Stack size 56 bytes, getwarte.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 268<LI>Call Chain = GetUP &rArr; Save_UP_GETWarte &rArr; Writer_GetWater_Data &rArr; Test_Write &rArr; STMFLASH_Write &rArr; STMFLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_lesure
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceOut
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sotf_Versions_Controller
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_RefreshAll
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayBuf_Clr
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clr_Pictrue
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_UP_GETWarte
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GET_Warte_Judeg
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayFloat
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayBuf_ClrRow
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OppositeColor
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_buys
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWater
</UL>

<P><STRONG><a name="[139]"></a>GetRO_Quantify</STRONG> (Thumb, 888 bytes, Stack size 64 bytes, getwarte.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 276<LI>Call Chain = GetRO_Quantify &rArr; Save_RO_GETWarte &rArr; Writer_GetWater_Data &rArr; Test_Write &rArr; STMFLASH_Write &rArr; STMFLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_lesure
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceOut
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sotf_Versions_Controller
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_RefreshAll
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayBuf_Clr
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_RO_GETWarte
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GET_Warte_Judeg
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayFloat
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayBuf_ClrRow
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OppositeColor
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seve_Userdata
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_buys
</UL>
<BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWater
</UL>

<P><STRONG><a name="[13a]"></a>GetEDI_Quantify</STRONG> (Thumb, 794 bytes, Stack size 64 bytes, getwarte.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 276<LI>Call Chain = GetEDI_Quantify &rArr; Save_EDI_GETWarte &rArr; Writer_GetWater_Data &rArr; Test_Write &rArr; STMFLASH_Write &rArr; STMFLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_lesure
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sotf_Versions_Controller
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_RefreshAll
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayBuf_Clr
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_EDI_GETWarte
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GET_Warte_Judeg
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayFloat
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayBuf_ClrRow
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OppositeColor
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seve_Userdata
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_buys
</UL>
<BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWater
</UL>

<P><STRONG><a name="[13b]"></a>GetUP_Quantify</STRONG> (Thumb, 1614 bytes, Stack size 88 bytes, getwarte.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 300<LI>Call Chain = GetUP_Quantify &rArr; Save_UP_GETWarte &rArr; Writer_GetWater_Data &rArr; Test_Write &rArr; STMFLASH_Write &rArr; STMFLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_lesure
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceOut
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sotf_Versions_Controller
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_RefreshAll
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayBuf_Clr
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_UP_GETWarte
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GET_Warte_Judeg
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayFloat
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayBuf_ClrRow
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OppositeColor
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seve_Userdata
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_buys
</UL>
<BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWater
</UL>

<P><STRONG><a name="[13c]"></a>GetWater</STRONG> (Thumb, 448 bytes, Stack size 32 bytes, getwarte.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 332<LI>Call Chain = GetWater &rArr; GetUP_Quantify &rArr; Save_UP_GETWarte &rArr; Writer_GetWater_Data &rArr; Test_Write &rArr; STMFLASH_Write &rArr; STMFLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_lesure
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sotf_Versions_Controller
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_RefreshAll
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayBuf_Clr
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clr_Pictrue
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUP_Quantify
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEDI_Quantify
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRO_Quantify
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUP
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEDI
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRO
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OppositeColor
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_buys
</UL>
<BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CurrentDisplay
</UL>

<P><STRONG><a name="[13d]"></a>Check_SC_Conductance</STRONG> (Thumb, 266 bytes, Stack size 24 bytes, query.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Check_SC_Conductance &rArr; OppositeColor &rArr; Clr_PictruePre &rArr; Send
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_lesure
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sotf_Versions_Controller
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_RefreshAll
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayBuf_Clr
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clr_Pictrue
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayFloat
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayBuf_ClrRow
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OppositeColor
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_buys
</UL>
<BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_UserCheck
</UL>

<P><STRONG><a name="[13f]"></a>Check_Output_VA1_0</STRONG> (Thumb, 184 bytes, Stack size 0 bytes, query.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_Output
</UL>

<P><STRONG><a name="[140]"></a>Check_Output_VB1_0</STRONG> (Thumb, 184 bytes, Stack size 0 bytes, query.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_Output
</UL>

<P><STRONG><a name="[141]"></a>Check_Output_VC1_0</STRONG> (Thumb, 184 bytes, Stack size 0 bytes, query.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_Output
</UL>

<P><STRONG><a name="[13e]"></a>Check_Output</STRONG> (Thumb, 174 bytes, Stack size 16 bytes, query.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Check_Output &rArr; OppositeColor &rArr; Clr_PictruePre &rArr; Send
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_lesure
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sotf_Versions_Controller
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_RefreshAll
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayBuf_Clr
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clr_Pictrue
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_Output_VC1_0
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_Output_VB1_0
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_Output_VA1_0
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OppositeColor
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_buys
</UL>
<BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_UserCheck
</UL>

<P><STRONG><a name="[143]"></a>Check_Input_VA1_0</STRONG> (Thumb, 174 bytes, Stack size 0 bytes, query.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_Input
</UL>

<P><STRONG><a name="[144]"></a>Check_Input_VB1_0</STRONG> (Thumb, 196 bytes, Stack size 0 bytes, query.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_Input
</UL>

<P><STRONG><a name="[145]"></a>Check_Input_VC1_0</STRONG> (Thumb, 196 bytes, Stack size 0 bytes, query.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_Input
</UL>

<P><STRONG><a name="[142]"></a>Check_Input</STRONG> (Thumb, 176 bytes, Stack size 16 bytes, query.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Check_Input &rArr; OppositeColor &rArr; Clr_PictruePre &rArr; Send
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_lesure
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sotf_Versions_Controller
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_RefreshAll
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayBuf_Clr
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clr_Pictrue
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_Input_VC1_0
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_Input_VB1_0
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_Input_VA1_0
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OppositeColor
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_buys
</UL>
<BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_UserCheck
</UL>

<P><STRONG><a name="[146]"></a>CompanyInformation</STRONG> (Thumb, 178 bytes, Stack size 16 bytes, query.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = CompanyInformation &rArr; OppositeColor &rArr; Clr_PictruePre &rArr; Send
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_lesure
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sotf_Versions_Controller
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_RefreshAll
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayBuf_Clr
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clr_Pictrue
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OppositeColor
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_buys
</UL>
<BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_UserCheck
</UL>

<P><STRONG><a name="[147]"></a>SoftwareInformation</STRONG> (Thumb, 228 bytes, Stack size 16 bytes, query.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = SoftwareInformation &rArr; OppositeColor &rArr; Clr_PictruePre &rArr; Send
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_lesure
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sotf_Versions_Controller
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_RefreshAll
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayBuf_Clr
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clr_Pictrue
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OppositeColor
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_buys
</UL>
<BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_UserCheck
</UL>

<P><STRONG><a name="[148]"></a>Menu_UserCheck</STRONG> (Thumb, 420 bytes, Stack size 24 bytes, query.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = Menu_UserCheck &rArr; Check_SC_Conductance &rArr; OppositeColor &rArr; Clr_PictruePre &rArr; Send
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_lesure
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sotf_Versions_Controller
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_RefreshAll
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayBuf_Clr
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clr_Pictrue
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftwareInformation
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompanyInformation
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_Input
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_Output
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_SC_Conductance
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OppositeColor
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_buys
</UL>
<BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CurrentDisplay
</UL>

<P><STRONG><a name="[149]"></a>DeviceWash</STRONG> (Thumb, 248 bytes, Stack size 16 bytes, useset.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = DeviceWash &rArr; OppositeColor &rArr; Clr_PictruePre &rArr; Send
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_lesure
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceOut
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sotf_Versions_Controller
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_RefreshAll
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayBuf_Clr
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clr_Pictrue
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OppositeColor
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;B_CX_Step1
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A_CX_Step1
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_buys
</UL>
<BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Userset
</UL>

<P><STRONG><a name="[14a]"></a>DS1302_TimeSet</STRONG> (Thumb, 1302 bytes, Stack size 24 bytes, useset.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = DS1302_TimeSet &rArr; OppositeColor &rArr; Clr_PictruePre &rArr; Send
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_lesure
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sotf_Versions_Controller
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_RefreshAll
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayBuf_Clr
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS1302_Datato10
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clr_Pictrue
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BurstRead1302
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS1302_POWER
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS1302_10toData
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BurstWrite1302
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OppositeColor
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_buys
</UL>
<BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Userset
</UL>

<P><STRONG><a name="[14c]"></a>Change_RO_UP</STRONG> (Thumb, 260 bytes, Stack size 24 bytes, useset.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Change_RO_UP &rArr; OppositeColor &rArr; Clr_PictruePre &rArr; Send
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_lesure
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sotf_Versions_Controller
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_RefreshAll
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayBuf_Clr
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clr_Pictrue
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_AD_Device
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OppositeColor
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_buys
</UL>
<BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Userset
</UL>

<P><STRONG><a name="[14d]"></a>UserCodeChange</STRONG> (Thumb, 596 bytes, Stack size 40 bytes, useset.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = UserCodeChange &rArr; Seve_Userdata &rArr; STMFLASH_Write &rArr; STMFLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_lesure
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sotf_Versions_Controller
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_RefreshAll
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayBuf_Clr
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clr_Pictrue
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OppositeColor
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seve_Userdata
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_buys
</UL>
<BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Userset
</UL>

<P><STRONG><a name="[14e]"></a>Communication_Set</STRONG> (Thumb, 240 bytes, Stack size 16 bytes, useset.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Communication_Set &rArr; OppositeColor &rArr; Clr_PictruePre &rArr; Send
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_lesure
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sotf_Versions_Controller
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_RefreshAll
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayBuf_Clr
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OppositeColor
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_buys
</UL>
<BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Userset
</UL>

<P><STRONG><a name="[14f]"></a>StartTime_Set</STRONG> (Thumb, 416 bytes, Stack size 32 bytes, useset.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = StartTime_Set &rArr; Seve_Userdata &rArr; STMFLASH_Write &rArr; STMFLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_lesure
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sotf_Versions_Controller
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_RefreshAll
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayBuf_Clr
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clr_Pictrue
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OppositeColor
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seve_Userdata
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_buys
</UL>
<BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Userset
</UL>

<P><STRONG><a name="[150]"></a>StopTime_Set</STRONG> (Thumb, 438 bytes, Stack size 32 bytes, useset.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = StopTime_Set &rArr; Seve_Userdata &rArr; STMFLASH_Write &rArr; STMFLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_lesure
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sotf_Versions_Controller
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_RefreshAll
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayBuf_Clr
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clr_Pictrue
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OppositeColor
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seve_Userdata
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_buys
</UL>
<BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Userset
</UL>

<P><STRONG><a name="[151]"></a>UserCodeJudge</STRONG> (Thumb, 408 bytes, Stack size 32 bytes, useset.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = UserCodeJudge &rArr; OppositeColor &rArr; Clr_PictruePre &rArr; Send
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_lesure
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sotf_Versions_Controller
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_RefreshAll
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayBuf_Clr
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clr_Pictrue
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OppositeColor
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_buys
</UL>
<BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Userset
</UL>

<P><STRONG><a name="[152]"></a>Dis_HistoryRO_Add</STRONG> (Thumb, 616 bytes, Stack size 24 bytes, useset.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Dis_HistoryRO_Add &rArr; OppositeColor &rArr; Clr_PictruePre &rArr; Send
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STMFLASH_ReadHalfWord
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_lesure
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sotf_Versions_Controller
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_RefreshAll
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayBuf_Clr
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clr_Pictrue
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ldivmod
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OppositeColor
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_buys
</UL>
<BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;History_Query
</UL>

<P><STRONG><a name="[154]"></a>Dis_HistoryUP_Add</STRONG> (Thumb, 556 bytes, Stack size 24 bytes, useset.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Dis_HistoryUP_Add &rArr; OppositeColor &rArr; Clr_PictruePre &rArr; Send
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STMFLASH_ReadHalfWord
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_lesure
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sotf_Versions_Controller
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_RefreshAll
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayBuf_Clr
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clr_Pictrue
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ldivmod
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OppositeColor
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_buys
</UL>
<BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;History_Query
</UL>

<P><STRONG><a name="[155]"></a>Dis_HistoryEDI_Add</STRONG> (Thumb, 608 bytes, Stack size 24 bytes, useset.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Dis_HistoryEDI_Add &rArr; OppositeColor &rArr; Clr_PictruePre &rArr; Send
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STMFLASH_ReadHalfWord
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_lesure
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sotf_Versions_Controller
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_RefreshAll
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayBuf_Clr
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clr_Pictrue
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ldivmod
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OppositeColor
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_buys
</UL>
<BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;History_Query
</UL>

<P><STRONG><a name="[156]"></a>ClearHistoryData_Dis</STRONG> (Thumb, 274 bytes, Stack size 24 bytes, useset.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = ClearHistoryData_Dis &rArr; Clean_GetWater_Data &rArr; Test_Write &rArr; STMFLASH_Write &rArr; STMFLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_lesure
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sotf_Versions_Controller
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_RefreshAll
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayBuf_Clr
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clr_Pictrue
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OppositeColor
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clean_GetWater_Data
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_buys
</UL>
<BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;History_Query
</UL>

<P><STRONG><a name="[157]"></a>Dis_History_Check</STRONG> (Thumb, 824 bytes, Stack size 72 bytes, useset.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = Dis_History_Check &rArr; OppositeColor &rArr; Clr_PictruePre &rArr; Send
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STMFLASH_Read
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STMFLASH_ReadHalfWord
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_lesure
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sotf_Versions_Controller
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_RefreshAll
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayBuf_Clr
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clr_Pictrue
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_Number
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_DisChar_EX
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayFloat1
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayFloat
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OppositeColor
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_buys
</UL>
<BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;History_Query
</UL>

<P><STRONG><a name="[15b]"></a>History_Query</STRONG> (Thumb, 474 bytes, Stack size 32 bytes, useset.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = History_Query &rArr; Dis_History_Check &rArr; OppositeColor &rArr; Clr_PictruePre &rArr; Send
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_lesure
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sotf_Versions_Controller
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_RefreshAll
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayBuf_Clr
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clr_Pictrue
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_History_Check
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearHistoryData_Dis
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_HistoryEDI_Add
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_HistoryUP_Add
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_HistoryRO_Add
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OppositeColor
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_buys
</UL>
<BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Userset
</UL>

<P><STRONG><a name="[15c]"></a>HX_Function</STRONG> (Thumb, 248 bytes, Stack size 16 bytes, useset.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = HX_Function &rArr; OppositeColor &rArr; Clr_PictruePre &rArr; Send
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_lesure
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sotf_Versions_Controller
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_RefreshAll
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayBuf_Clr
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clr_Pictrue
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OppositeColor
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seve_Admindata
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_buys
</UL>
<BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Userset
</UL>

<P><STRONG><a name="[15d]"></a>Menu_Userset</STRONG> (Thumb, 510 bytes, Stack size 24 bytes, useset.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = Menu_Userset &rArr; History_Query &rArr; Dis_History_Check &rArr; OppositeColor &rArr; Clr_PictruePre &rArr; Send
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_lesure
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sotf_Versions_Controller
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_RefreshAll
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayBuf_Clr
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clr_Pictrue
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HX_Function
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;History_Query
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserCodeJudge
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopTime_Set
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartTime_Set
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communication_Set
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserCodeChange
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Change_RO_UP
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS1302_TimeSet
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceWash
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OppositeColor
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_buys
</UL>
<BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CurrentDisplay
</UL>

<P><STRONG><a name="[165]"></a>Quick_GetWater</STRONG> (Thumb, 124 bytes, Stack size 0 bytes, menu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu
</UL>

<P><STRONG><a name="[164]"></a>WaitDisplay</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, menu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu
</UL>

<P><STRONG><a name="[15e]"></a>ShowDataTime</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ShowDataTime &rArr; BurstRead1302 &rArr; Read1Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS1302_Datato10
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BurstRead1302
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_DisChar
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS1302_POWER
</UL>
<BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CurrentDisplay
</UL>

<P><STRONG><a name="[162]"></a>ShowMeun</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, menu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CurrentDisplay
</UL>

<P><STRONG><a name="[163]"></a>ShowState</STRONG> (Thumb, 228 bytes, Stack size 12 bytes, menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ShowState
</UL>
<BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CurrentDisplay
</UL>

<P><STRONG><a name="[160]"></a>ShowVersion</STRONG> (Thumb, 134 bytes, Stack size 24 bytes, menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ShowVersion
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayBuf_ClrRow
</UL>
<BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CurrentDisplay
</UL>

<P><STRONG><a name="[161]"></a>CurrentDisplay</STRONG> (Thumb, 342 bytes, Stack size 8 bytes, menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = CurrentDisplay &rArr; GetWater &rArr; GetUP_Quantify &rArr; Save_UP_GETWarte &rArr; Writer_GetWater_Data &rArr; Test_Write &rArr; STMFLASH_Write &rArr; STMFLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_lesure
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sotf_Versions_Controller
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_RefreshAll
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayBuf_Clr
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clr_Pictrue
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowVersion
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowState
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMeun
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDataTime
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Userset
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_UserCheck
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWater
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OppositeColor
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_buys
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu
</UL>

<P><STRONG><a name="[7a]"></a>menu</STRONG> (Thumb, 346 bytes, Stack size 8 bytes, menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 348<LI>Call Chain = menu &rArr; CurrentDisplay &rArr; GetWater &rArr; GetUP_Quantify &rArr; Save_UP_GETWarte &rArr; Writer_GetWater_Data &rArr; Test_Write &rArr; STMFLASH_Write &rArr; STMFLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_lesure
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_RefreshAll
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CurrentDisplay
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitDisplay
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Quick_GetWater
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUP
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEDI
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRO
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_admin
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_buys
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[267]"></a>__use_no_semihosting</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi_2.o(.text), UNUSED)

<P><STRONG><a name="[153]"></a>__aeabi_ldivmod</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llsdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_ldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_HistoryEDI_Add
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_HistoryUP_Add
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_HistoryRO_Add
</UL>

<P><STRONG><a name="[166]"></a>_ll_sdiv</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, llsdiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[df]"></a>__aeabi_memcpy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recevie_MessagetoQueue
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_MessagetoQueue
</UL>

<P><STRONG><a name="[168]"></a>__rt_memcpy</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[268]"></a>_memcpy_lastbytes</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_v6.o(.text), UNUSED)

<P><STRONG><a name="[ee]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Userdata
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_History_Check
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Highset_OutputTest
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Writer_GetWater_Data
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seve_Userdata
</UL>

<P><STRONG><a name="[269]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[26a]"></a>__rt_memclr_w</STRONG> (Thumb, 78 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[26b]"></a>_memset_w</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[dd]"></a>strcmp</STRONG> (Thumb, 128 bytes, Stack size 0 bytes, strcmpv7m.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recevie_MessagetoQueue
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_MessagetoQueue
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnTMRegsiter
</UL>

<P><STRONG><a name="[26c]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[26d]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[26e]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[26f]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[270]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[167]"></a>__aeabi_uldivmod</STRONG> (Thumb, 0 bytes, Stack size 48 bytes, lludivv7m.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ll_sdiv
</UL>

<P><STRONG><a name="[271]"></a>_ll_udiv</STRONG> (Thumb, 238 bytes, Stack size 48 bytes, lludivv7m.o(.text), UNUSED)

<P><STRONG><a name="[169]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL>

<P><STRONG><a name="[272]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[273]"></a>__rt_memcpy_w</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[274]"></a>_memcpy_lastbytes_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[56]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[5b]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[275]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[16a]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[276]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[9b]"></a>__aeabi_d2f</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, d2f.o(x$fpl$d2f))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Adc4_Average
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Adc3_Average
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Adc2_Average
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Adc_Average
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUP_Quantify
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUP
</UL>

<P><STRONG><a name="[16d]"></a>_d2f</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, d2f.o(x$fpl$d2f), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fretinf
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[12e]"></a>__aeabi_dadd</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, daddsub_clz.o(x$fpl$dadd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUP_Quantify
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUP
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Change_Warn
</UL>

<P><STRONG><a name="[170]"></a>_dadd</STRONG> (Thumb, 332 bytes, Stack size 16 bytes, daddsub_clz.o(x$fpl$dadd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
</UL>

<P><STRONG><a name="[175]"></a>__fpl_dcmp_Inf</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, dcmpi.o(x$fpl$dcmpinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmple
</UL>

<P><STRONG><a name="[12f]"></a>__aeabi_d2uiz</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dfixu.o(x$fpl$dfixu), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Change_Warn
</UL>

<P><STRONG><a name="[173]"></a>_dfixu</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, dfixu.o(x$fpl$dfixu), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[99]"></a>__aeabi_i2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dflt))
<BR><BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Adc4_Average
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Adc3_Average
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Adc2_Average
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Adc_Average
</UL>

<P><STRONG><a name="[277]"></a>_dflt</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dflt), UNUSED)

<P><STRONG><a name="[138]"></a>__aeabi_cdcmple</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dleqf.o(x$fpl$dleqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_cdcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUP_Quantify
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUP
</UL>

<P><STRONG><a name="[174]"></a>_dcmple</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, dleqf.o(x$fpl$dleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_Inf
</UL>

<P><STRONG><a name="[178]"></a>__fpl_dcmple_InfNaN</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, dleqf.o(x$fpl$dleqf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drcmple
</UL>

<P><STRONG><a name="[9a]"></a>__aeabi_dmul</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dmul.o(x$fpl$dmul))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Adc4_Average
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Adc3_Average
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Adc2_Average
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Adc_Average
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUP_Quantify
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUP
</UL>

<P><STRONG><a name="[176]"></a>_dmul</STRONG> (Thumb, 332 bytes, Stack size 32 bytes, dmul.o(x$fpl$dmul), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[16f]"></a>__fpl_dnaninf</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, dnaninf.o(x$fpl$dnaninf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmple
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dfixu
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2f
</UL>

<P><STRONG><a name="[172]"></a>__fpl_dretinf</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dretinf.o(x$fpl$dretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_f2d
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[a0]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, drleqf.o(x$fpl$drleqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Adc4_Average
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Adc3_Average
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Adc_Average
</UL>

<P><STRONG><a name="[177]"></a>_drcmple</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, drleqf.o(x$fpl$drleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmple_InfNaN
</UL>

<P><STRONG><a name="[278]"></a>__aeabi_dsub</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)

<P><STRONG><a name="[179]"></a>_dsub</STRONG> (Thumb, 464 bytes, Stack size 32 bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[9f]"></a>__aeabi_f2d</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, f2d.o(x$fpl$f2d))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_f2d
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Adc4_Average
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Adc3_Average
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Adc_Average
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUP_Quantify
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUP
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Change_Warn
</UL>

<P><STRONG><a name="[17b]"></a>_f2d</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, f2d.o(x$fpl$f2d), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
</UL>

<P><STRONG><a name="[9e]"></a>__aeabi_fadd</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, faddsub_clz.o(x$fpl$fadd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Adc3_Average
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Adc2_Average
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Adc_Average
</UL>

<P><STRONG><a name="[17d]"></a>_fadd</STRONG> (Thumb, 196 bytes, Stack size 16 bytes, faddsub_clz.o(x$fpl$fadd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fretinf
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub1
</UL>

<P><STRONG><a name="[182]"></a>__fpl_fcmp_Inf</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, fcmpi.o(x$fpl$fcmpinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fcmple
</UL>

<P><STRONG><a name="[9c]"></a>__aeabi_fdiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, fdiv.o(x$fpl$fdiv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Adc4_Average
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Adc3_Average
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Adc2_Average
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Adc_Average
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GET_FLOW
</UL>

<P><STRONG><a name="[17f]"></a>_fdiv</STRONG> (Thumb, 384 bytes, Stack size 16 bytes, fdiv.o(x$fpl$fdiv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fretinf
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
</UL>

<P><STRONG><a name="[e4]"></a>__aeabi_f2uiz</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, ffixu.o(x$fpl$ffixu))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_f2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRO_Quantify
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_UP_GETWarte
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_EDI_GETWarte
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRO
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_RO_GETWarte
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayFloat
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GET_EDI_TIMER
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GET_RO_TIMER
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GET_UP_TIMER
</UL>

<P><STRONG><a name="[180]"></a>_ffixu</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, ffixu.o(x$fpl$ffixu), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
</UL>

<P><STRONG><a name="[9d]"></a>__aeabi_i2f</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fflt_clz.o(x$fpl$fflt))
<BR><BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Adc4_Average
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Adc3_Average
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Adc2_Average
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Adc_Average
</UL>

<P><STRONG><a name="[279]"></a>_fflt</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, fflt_clz.o(x$fpl$fflt), UNUSED)

<P><STRONG><a name="[a1]"></a>__aeabi_ui2f</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fflt_clz.o(x$fpl$ffltu))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Adc2_Average
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GET_FLOW
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_History_Check
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUP_Quantify
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEDI_Quantify
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRO_Quantify
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUP
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_UP_GETWarte
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEDI
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_EDI_GETWarte
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRO
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_RO_GETWarte
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GET_EDI_TIMER
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GET_RO_TIMER
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GET_UP_TIMER
</UL>

<P><STRONG><a name="[27a]"></a>_ffltu</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, fflt_clz.o(x$fpl$ffltu), UNUSED)

<P><STRONG><a name="[a2]"></a>__aeabi_cfcmple</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, fleqf.o(x$fpl$fleqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_cfcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Adc2_Average
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUP_Quantify
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUP
</UL>

<P><STRONG><a name="[181]"></a>_fcmple</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, fleqf.o(x$fpl$fleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_Inf
</UL>

<P><STRONG><a name="[185]"></a>__fpl_fcmple_InfNaN</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fleqf.o(x$fpl$fleqf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frcmple
</UL>

<P><STRONG><a name="[e3]"></a>__aeabi_fmul</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, fmul.o(x$fpl$fmul))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUP_Quantify
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEDI_Quantify
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRO_Quantify
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUP
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_UP_GETWarte
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEDI
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_EDI_GETWarte
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_RO_GETWarte
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Change_Warn
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayFloat
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GET_EDI_TIMER
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GET_RO_TIMER
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GET_UP_TIMER
</UL>

<P><STRONG><a name="[183]"></a>_fmul</STRONG> (Thumb, 258 bytes, Stack size 16 bytes, fmul.o(x$fpl$fmul), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fretinf
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
</UL>

<P><STRONG><a name="[17c]"></a>__fpl_fnaninf</STRONG> (Thumb, 140 bytes, Stack size 8 bytes, fnaninf.o(x$fpl$fnaninf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fmul
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fcmple
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ffixu
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fdiv
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_f2d
</UL>

<P><STRONG><a name="[16e]"></a>__fpl_fretinf</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fretinf.o(x$fpl$fretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fmul
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fdiv
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2f
</UL>

<P><STRONG><a name="[135]"></a>__aeabi_cfrcmple</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, frleqf.o(x$fpl$frleqf))
<BR><BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUP_Quantify
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEDI_Quantify
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRO_Quantify
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUP
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEDI
</UL>

<P><STRONG><a name="[184]"></a>_frcmple</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, frleqf.o(x$fpl$frleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmple_InfNaN
</UL>

<P><STRONG><a name="[27b]"></a>__aeabi_fsub</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, faddsub_clz.o(x$fpl$fsub), UNUSED)

<P><STRONG><a name="[186]"></a>_fsub</STRONG> (Thumb, 234 bytes, Stack size 16 bytes, faddsub_clz.o(x$fpl$fsub), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd1
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[7b]"></a>__set_FAULTMASK</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>

<P><STRONG><a name="[7c]"></a>NVIC_SystemReset</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>

<P><STRONG><a name="[7e]"></a>SetSysClockTo72</STRONG> (Thumb, 214 bytes, Stack size 12 bytes, system_stm32f10x.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetSysClockTo72
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>

<P><STRONG><a name="[7d]"></a>SetSysClock</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, system_stm32f10x.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SetSysClock &rArr; SetSysClockTo72
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockTo72
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[c8]"></a>TI4_Config</STRONG> (Thumb, 130 bytes, Stack size 20 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[c6]"></a>TI3_Config</STRONG> (Thumb, 122 bytes, Stack size 20 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[c4]"></a>TI2_Config</STRONG> (Thumb, 130 bytes, Stack size 20 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TIxExternalClockConfig
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMIConfig
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[c2]"></a>TI1_Config</STRONG> (Thumb, 108 bytes, Stack size 20 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TIxExternalClockConfig
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMIConfig
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[d1]"></a>KEY_Init</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, keyboard.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitKeyboard
</UL>

<P><STRONG><a name="[d3]"></a>key_Event_Over</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, keyboard.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_lesure
</UL>

<P><STRONG><a name="[159]"></a>Dis_Number</STRONG> (Thumb, 160 bytes, Stack size 0 bytes, useset.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_History_Check
</UL>

<P><STRONG><a name="[17a]"></a>_dadd1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, daddsub_clz.o(x$fpl$dadd), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
</UL>

<P><STRONG><a name="[171]"></a>_dsub1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[187]"></a>_fadd1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faddsub_clz.o(x$fpl$fadd), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub
</UL>

<P><STRONG><a name="[17e]"></a>_fsub1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faddsub_clz.o(x$fpl$fsub), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
